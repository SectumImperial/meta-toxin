include ../button/button.pug
include ../input/input.pug

mixin dropdown(options = {})
  - 
    const items = options.items ? options.items : []
    const typeItem = options.typeItem ? options.typeItem : 'guests'
    const placeholder = typeItem === 'guests' ? 'Сколько гостей' : 'Сколько кроватей'
    const id = options.idInput ? options.idInput : ''
    const separate = options.separateCount ? options.separateCount : null
  div.dropdown(
      class = options.class 
  )
    +input({
      type: 'text',
      name: typeItem,
      classInput: 'dropdown__input',
      readonly: true,
      arrow: true,
      placeholder: placeholder,
      id: id,
      dataOptions: {
        allCounts: ['гость', 'гостя', 'гостей'],
        infantCounts: ['младенец', 'младенца', 'младенцев']
      }
    })
    div.dropdown__content
      .dropdown__counter 
        ul.dropdown__items(
          data-type = typeItem
        )
          each item in items
            li.dropdown__item
              span.dropdown__item-text= item
              .dropdown__items-nav
                button(
                 class = "dropdown__btn dropdown__btn_disabled dropdown__btn_decrement"
                )= '-'
                span.dropdown__count(
                  data-item= item
                  data-separate = separate.includes(item) ? 'true' : 'false'
                ) 0
                button(
                  class = "dropdown__btn dropdown__btn_increment"
                )= '+'
      .dropdown__nav
        +button({
          content: 'Очистить',
          classWrapper: 'dropdown__button dropdown__button_clear btn-wrapper_transparent',
          classBtn: 'button_color'
        })
        +button({
          content: 'Применить',
          classWrapper: 'dropdown__button dropdown__button_accept btn-wrapper_transparent',
          classBtn: 'button_color'
        })